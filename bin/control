#!/bin/bash -e

source $OPENSHIFT_CARTRIDGE_SDK_BASH

PID_FILE=$OPENSHIFT_ELASTICSEARCH_DIR/run/elasticsearch.pid

function _install_plugins()
{
  local PLUGIN_CMD="$OPENSHIFT_ELASTICSEARCH_DIR/usr/bin/plugin -Des.path.plugins=$OPENSHIFT_DATA_DIR/elasticsearch-plugins"

  local old_plugins=$($PLUGIN_CMD --list | awk '/-/{print $2}' | xargs)
  if [ -n "$old_plugins"  -a "$old_plugins" != "No" ]; then #ARGH!
    echo "Removing old ElasticSearch plugins..."
    for plugin in $old_plugins; do
      $PLUGIN_CMD --remove $plugin
    done
  fi

  echo "Installing ElasticSearch plugins..."

  local plugins="$(grep -v '^#' $OPENSHIFT_REPO_DIR/plugins.txt 2>/dev/null | xargs)"

  if [ "${plugins}" ]; then
    for plugin in ${plugins}; do
      local name=$(echo $plugin | cut -f 1 -d =)
      local url=$(echo $plugin | cut -f 2 -d =)
      if [ "$name" == "$url" ]; then
        $PLUGIN_CMD --install $name
      else
        $PLUGIN_CMD --url $url --install $name
      fi
    done
  fi
}

function _is_running() {
  if [ -f $PID_FILE ]; then
    local zpid=$(cat $PID_FILE 2> /dev/null)
    local myid=$(id -u)
    if `ps -opid,args --pid $zpid 2>&1 &> /dev/null`; then
      return 0
    fi
  fi

  return 1
}

function start() {
  if _is_running; then
    echo "ElasticSearch is already running" 1>&2
    return 0
  fi

  export PUBLISH_HOST=$(python -c "import socket; print socket.gethostbyname('$OPENSHIFT_GEAR_DNS')")

  $OPENSHIFT_ELASTICSEARCH_DIR/usr/bin/elasticsearch -d -p $PID_FILE
}

function stop() {
  if ! _is_running; then
    echo "ElasticSearch is already stopped" 1>&2
    return 0
  fi

  if [ -f $PID_FILE ]; then
    local zpid=$(cat $PID_FILE 2> /dev/null)
  fi

  if [ -n $zpid ]; then
    /bin/kill $zpid
    local ret=$?
    if [ $ret -eq 0 ]; then
      local TIMEOUT=10
      while [ $TIMEOUT -gt 0 ] &&  _is_running ; do
        /bin/kill -0 "$zpid" > /dev/null 2>&1  ||  break
        sleep 1
        let TIMEOUT=${TIMEOUT}-1
      done
    fi
  fi
}

function restart() {
  stop
  start
}

function status() {
  local output=""
  if output=$(curl http://$OPENSHIFT_RUBY_IP:$OPENSHIFT_RUBY_PORT/ &> /dev/null); then
    client_result "Application is running"
  else
    client_result "Application is either stopped or inaccessible"
  fi
}

function deploy() {
   _install_plugins
}

case "$1" in
  start)             start ;;
  stop)              stop ;;
  restart | reload ) restart $1 ;;
  status)            status ;;
  deploy)            deploy ;;
  *)                 exit 0
esac
